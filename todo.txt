 _X_ Create an SFML Window 
 _X_ Render graphics to the screen
 ___ Implement the Vec2 class, which you will use for all Components 
 ___ Implement Delayed entity add() to solve iterator invalidation
 ___ Save the configuration file reading until later, after entities implemented 
 ___ Test all the functions of the Vec2 class before moving on
 ___ Implement basic functionality in the EntityManager class
     Implement the EntityManager's addEntity() and update() functions so 
     you can start testing the Game class quickly. Don't worry about the update() 
     function which deletes dead entities until later when you get more game mechanics working 
 ___ Implement basics of the Game class:
     a. Construct a player Entity using the spawnPlayer() function 
     b. Implement basic drawing of entities using the Game::sRender() function 
     c. Construct some enemies using the spawnEnemy() function 
     d. Construct a bullet using the spawnBullet() function 
 ___ Implement Player Movement in Game::sUserInput and Game::sMovement 
 ___ Implement the EntityManager::update() function so it deletes dead entities 
 ___ Implement the EntityManager::getEntities(tag) functionality 
 ___ Implement collisions in sCollision and entity.destroy() if it's dead 
 ___ Implement the rest of the game's functionality, including config file reading 
 ___ Implement Game Scenes
